Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

+ aws_eip.mod_nat[0]
      id:                               <computed>
      allocation_id:                    <computed>
      association_id:                   <computed>
      domain:                           <computed>
      instance:                         <computed>
      network_interface:                <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      vpc:                              "true"

  + aws_eip.mod_nat[1]
      id:                               <computed>
      allocation_id:                    <computed>
      association_id:                   <computed>
      domain:                           <computed>
      instance:                         <computed>
      network_interface:                <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      vpc:                              "true"

  + aws_eip.mod_nat[2]
      id:                               <computed>
      allocation_id:                    <computed>
      association_id:                   <computed>
      domain:                           <computed>
      instance:                         <computed>
      network_interface:                <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      vpc:                              "true"

  + aws_internet_gateway.default
      id:                               <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "vpc-module-test"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_nat_gateway.nat_gateway[0]
      id:                               <computed>
      allocation_id:                    "${element(aws_eip.mod_nat.*.id, count.index)}"
      network_interface_id:             <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_nat_gateway.nat_gateway[1]
      id:                               <computed>
      allocation_id:                    "${element(aws_eip.mod_nat.*.id, count.index)}"
      network_interface_id:             <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_nat_gateway.nat_gateway[2]
      id:                               <computed>
      allocation_id:                    "${element(aws_eip.mod_nat.*.id, count.index)}"
      network_interface_id:             <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_route.private_nat_gateway[0]
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       <computed>
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   "${element(aws_nat_gateway.nat_gateway.*.id, count.index)}"
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      state:                            <computed>

  + aws_route.private_nat_gateway[1]
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       <computed>
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   "${element(aws_nat_gateway.nat_gateway.*.id, count.index)}"
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      state:                            <computed>

  + aws_route.private_nat_gateway[2]
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       <computed>
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   "${element(aws_nat_gateway.nat_gateway.*.id, count.index)}"
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      state:                            <computed>

  + aws_route.public_internet_gateway
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       "${aws_internet_gateway.default.id}"
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   <computed>
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      state:                            <computed>

  + aws_route_table.private[0]
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az1"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_route_table.private[1]
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az2"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_route_table.private[2]
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az3"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_route_table.public
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "public"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_route_table_association.private_admin[0]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.admin.*.id, count.index)}"

  + aws_route_table_association.private_admin[1]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.admin.*.id, count.index)}"

  + aws_route_table_association.private_admin[2]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.admin.*.id, count.index)}"

  + aws_route_table_association.private_private[0]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.private.*.id, count.index)}"

  + aws_route_table_association.private_private[1]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.private.*.id, count.index)}"

  + aws_route_table_association.private_private[2]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      subnet_id:                        "${element(aws_subnet.private.*.id, count.index)}"

  + aws_route_table_association.public_public[0]
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_route_table_association.public_public[1]
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_route_table_association.public_public[2]
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + aws_subnet.admin[0]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1a"
      cidr_block:                       "10.21.0.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "admin_az1"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.admin[1]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1d"
      cidr_block:                       "10.21.8.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "admin_az2"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.admin[2]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1c"
      cidr_block:                       "10.21.16.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "admin_az3"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.private[0]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1a"
      cidr_block:                       "10.21.64.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az1"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.private[1]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1d"
      cidr_block:                       "10.21.72.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az2"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.private[2]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1c"
      cidr_block:                       "10.21.80.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "private_az3"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.public[0]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1a"
      cidr_block:                       "10.21.32.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "public_az1"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.public[1]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1d"
      cidr_block:                       "10.21.40.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "public_az2"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_subnet.public[2]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1c"
      cidr_block:                       "10.21.48.0/21"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "public_az3"
      vpc_id:                           "${aws_vpc.default.id}"

  + aws_vpc.default
      id:                               <computed>
      assign_generated_ipv6_cidr_block: "false"
      cidr_block:                       "10.21.0.0/16"
      default_network_acl_id:           <computed>
      default_route_table_id:           <computed>
      default_security_group_id:        <computed>
      dhcp_options_id:                  <computed>
      enable_classiclink:               "false"
      enable_classiclink_dns_support:   <computed>
      enable_dns_hostnames:             "true"
      enable_dns_support:               "true"
      instance_tenancy:                 "default"
      ipv6_association_id:              <computed>
      ipv6_cidr_block:                  <computed>
      main_route_table_id:              <computed>
      tags.%:                           "3"
      tags.Author:                      "ReactiveOps"
      tags.Managed By:                  "Terraform"
      tags.Name:                        "vpc-module-test"
Plan: 34 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

